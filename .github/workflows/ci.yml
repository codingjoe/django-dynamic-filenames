name: CI

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron:  '0 0 * * *'

jobs:

  lint:
    strategy:
      fail-fast: false
      matrix:
        lint-command:
          - "bandit ."
          - "black --check --diff ."
          - "flake8 ."
          - "isort --check-only --diff ."
          - "pydocstyle ."
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'
      - run: python -m pip install -e .[lint]
      - run: ${{ matrix.lint-command }}

  readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip build wheel twine readme-renderer
      - run: python -m build --sdist --wheel
      - run: python -m twine check dist/*
      - uses: actions/upload-artifact@v4
        with:
          path: dist/*

  pytest:
    runs-on: ubuntu-latest
    needs:
      - readme
      - lint
    strategy:
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
        django-version:
          - "4.2"
          - "5.0"
          - "5.1"
    steps:
    - uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - run: python -m pip install .[test]
    - name: Install Django ${{ matrix.django-version }}
      run: python -m pip install "django~=${{ matrix.django-version }}.0"
    - name: Run tests
      run: python -m pytest
    - uses: codecov/codecov-action@v5

  analyze:
    name: CodeQL Analyze
    needs: [ pytest ]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ python ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"